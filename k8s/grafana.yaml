
---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
      volumes:
      - name: grafana-storage
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards

---
# Grafana Persistent Volume Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
# Grafana Service
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  type: LoadBalancer
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: grafana

---
# Grafana Data Sources ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  prometheus.yaml: |-
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:9090
      access: proxy
      isDefault: true

---
# Grafana Dashboards ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
data:
  prometheus.yaml: |-
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      url: http://prometheus:9090
      access: proxy
      isDefault: true
      jsonData:
        timeInterval: "15s"
        httpMethod: "POST"
      version: 1
      editable: false

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-ml-service
data:
  ml-service.json: |-
    {
  "title": "ML Service Monitoring",
  "tags": ["ml-service", "kubernetes"],
  "timezone": "browser",
  "panels": [
    {
      "title": "HTTP Requests Rate",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [{
        "expr": "rate(ml_service_http_requests_total[1m])",
        "legendFormat": "{{pod}} - {{method}} {{route}}",
        "interval": "15s"
      }],
      "gridPos": {"x": 0, "y": 0, "w": 12, "h": 8}
    },
    {
      "title": "Request Duration (99th %ile)",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [{
        "expr": "histogram_quantile(0.99, sum(rate(ml_service_request_duration_seconds_bucket[1m])) by (le, route, method))",
        "legendFormat": "{{method}} {{route}}",
        "interval": "15s"
      }],
      "gridPos": {"x": 12, "y": 0, "w": 12, "h": 8}
    },
    {
      "title": "Error Rate",
      "type": "stat",
      "datasource": "Prometheus",
      "targets": [{
        "expr": "sum(rate(ml_service_http_requests_total{status=~\"5..\"}[1m])) / sum(rate(ml_service_http_requests_total[1m]))",
        "format": "percentunit",
        "legendFormat": "Error Rate"
      }],
      "gridPos": {"x": 0, "y": 8, "w": 6, "h": 4}
    },
    {
      "title": "Active Pods",
      "type": "gauge",
      "datasource": "Prometheus",
      "targets": [{
        "expr": "count(kube_pod_info{namespace=\"default\", pod=~\"ml-service-.*\"})",
        "legendFormat": "Pods"
      }],
      "gridPos": {"x": 6, "y": 8, "w": 6, "h": 4}
    },
    {
      "title": "CPU Usage",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [{
        "expr": "rate(container_cpu_usage_seconds_total{container=\"ml-service\"}[1m])",
        "legendFormat": "{{pod}}"
      }],
      "gridPos": {"x": 0, "y": 12, "w": 12, "h": 8}
    },
    {
      "title": "Memory Usage",
      "type": "graph",
      "datasource": "Prometheus",
      "targets": [{
        "expr": "container_memory_working_set_bytes{container=\"ml-service\"}",
        "legendFormat": "{{pod}}",
        "interval": "15s"
      }],
      "gridPos": {"x": 12, "y": 12, "w": 12, "h": 8}
    }
  ],
  "templating": {
    "list": [{
      "name": "pod",
      "label": "Pod",
      "datasource": "Prometheus",
      "query": "label_values(kube_pod_info{namespace=\"default\", pod=~\"ml-service-.*\"}, pod)"
    }]
  }
}
